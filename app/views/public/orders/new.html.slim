= simple_form_for [:public, order] do |f|
  = f.input :income_payment_system_id, as: :hidden
  = f.input :outcome_payment_system_id, as: :hidden
  = f.input :direction_rate_id, as: :hidden
  = f.input :request_direction, as: :hidden
  .row
    .col-md-4
      h2.mb-3 1. Отдаёте
      = f.input :income_amount, 
        as: :money, 
        wrapper: :input_group,  
        append: f.object.income_amount.try(:currency) || f.object.income_currency, 
        label: false, 
        input_html: { autofocus: true },
        error: ''
      = render 'payment_systems', 
        payment_systems: income_payment_systems, 
        param_name: :income_payment_system_id, 
        active_ps: order.income_payment_system, 
        disabled: false  do |ps|
        = present_payment_system ps

    .col-md-4
      h2.mb-3 2. Получаете
      = f.input :outcome_amount, as: :money, wrapper: :input_group,  append: f.object.outcome_amount.try(:currency) || f.object.outcome_currency, label: false, error: ''
      div.nav.flex-column.nav-pills role="tablist" aria-orientation="vertical"
        - outcome_payment_systems.each do |ps|
          - active = ps == order.outcome_payment_system
          - direction = Gera::Direction.new(ps_from: order.income_payment_system, ps_to: ps).freeze
          - disabled = direction.direction_rate.nil?
          a class=("nav-link" + (active ? ' active' : '') + (disabled ? ' disabled' : '')) role="tab" aria-controls="v-pills-home" aria-selected=active.to_s href=public_root_url( request.query_parameters.merge outcome_payment_system_id: ps.id)
            = present_payment_system ps
            .text-small.float-right
              - if disabled
                | Нет обмена
              - else
                -# = humanized_money_with_currency direction.direction_rate.exchange(income_amount)
                = humanized_money_with_currency Money.new(final_reserves[ps.id], ps.currency)

    .col-md-4
      h2.mb-3 3. Ввод данных
      = render 'errors', order: order, rate_calculation: rate_calculation if Rails.env.development?

      - if order.direction_rate.persisted?
        = f.input :income_amount, 
          as: :money, 
          error: '',
          append: f.object.income_amount.currency, 
          wrapper: :input_group, 
          disabled: true, 
          label: 'Отдаёте', 
          disable_errors: true,
          input_html: { id: :disabled_income_amount }
        = f.input :rate_value, 
          as: :string, 
          wrapper: :input_group, 
          append: [order.direction_rate.outcome_payment_system.currency, order.direction_rate.income_payment_system.currency].join('/'), 
          disabled: true, 
          label: 'Обмениваете по курсу', 
          input_html: { class: 'text-right', value: humanized_rate_text(order.direction_rate.rate_value) }
        = f.input :outcome_amount, 
          as: :money, 
          wrapper: :input_group, 
          append: f.object.outcome_amount.currency, 
          disabled: true, 
          error: '',
          label: 'Получаете', 
          disable_errors: true,
          input_html: { id: :disabled_outcome_amount }
        = f.input :user_full_name, label: 'ФИО' if order.require_full_name?
        = f.input :user_email, label: 'Email' if order.require_email?
        = f.input :user_phone, label: 'Телефон' if order.require_phone?
        = f.input :user_telegram, label: 'Telegram' if order.require_telegram?
        = f.input :city_id, collection: City.available.ordered, label: 'Город', require: true, include_blank: false if order.require_city?
        = f.input :user_income_address, label: 'На адрес' if order.require_income_address?
        = f.submit 'Обменять сейчас', class: 'btn btn-primary btn-lg mt-4 pt-3 pb-3', style: 'width: 100%', disabled: rate_calculation.errors.any?

        - if Rails.env.development? && params[:debug]
          code.mt-4 direction_rate_id: #{direction_rate.id}
      - else
        .alert.alert-warning Нет обмена по этому направлению
